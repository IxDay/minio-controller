[env]
KUBECONFIG = "{{config_root}}/kubeconfig"
KIND_CLUSTER_NAME = "minio-controller"
MC_CONFIG_DIR = "{{config_root}}/.mc"

[vars]
container_tool = "docker"
image = "minio-controller:latest"
envtest_version = "release-0.20"
k8s_version = "1.32"

[tools]
go = "1.23"

"aqua:jqlang/jq" = "1.7"
"aqua:kubernetes-sigs/kubebuilder" = "4.5"
"aqua:kubernetes-sigs/kind" = "0.26.0"
"aqua:kubernetes/kubectl" = "1.32"

"go:github.com/golangci/golangci-lint/cmd/golangci-lint" = "v1.63.4"
"go:sigs.k8s.io/kustomize/kustomize/v5" = "v5.5.0"
"go:sigs.k8s.io/controller-runtime/tools/setup-envtest" = "release-0.20"
"go:sigs.k8s.io/controller-tools/cmd/controller-gen" = "v0.17.1"
"aqua:helm/helm" = "3.16"
"aqua:minio/mc" = "RELEASE.2025-02-08T19-14-21Z"
"go:github.com/go-delve/delve/cmd/dlv" = "1.24"

[tasks.build]
run = "go build -o bin/manager cmd/main.go"
outputs = ["bin/manager"]
alias = "b"
sources = ["**/*.go"]
depends = ["manifests", "generate", "fmt", "vet"]

[tasks.start]
env = { POD_NAMESPACE = "minio-controller" }
run = "go run ./cmd/main.go"
depends = ["manifests", "generate", "fmt", "vet"]

[tasks.install]
depends = ["manifests"]
run = 'kustomize build config/crd | kubectl apply -f-'

[tasks.deploy]
depends = ["manifests"]
run = [
    'cd config/manager && kustomize edit set image controller="{{arg(name="img",default=vars.image)}}"',
    'kustomize build config/default | kubectl apply -f-',
]

[tasks.teardown]
run = 'kustomize build config/default | kubectl delete --ignore-not-found={{flag(name="ignore_not_found")}} -f-'

[tasks.uninstall]
depends = ["manifests"]
run = 'kustomize build config/crd | kubectl delete --ignore-not-found={{flag(name="ignore_not_found")}} -f-'

[tasks.generate]
run = 'controller-gen object:headerFile="hack/boilerplate.go.txt" paths="./..."'

[tasks.manifests]
run = 'controller-gen rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases'

[tasks.fmt]
run = 'go fmt ./...'

[tasks.vet]
run = 'go vet ./...'

[tasks.test]
depends = ["manifests", "generate", "fmt", "vet", "envtest:setup"]
env.K8S_VERSION = '{{vars.k8s_version}}'
file = "./scripts/test.sh"

[tasks.lint]
run = 'golangci-lint run'

[tasks."lint:fix"]
run = 'golangci-lint run --fix'

[tasks."lint:config"]
run = 'golangci-lint config verify'

[tasks."envtest:version"]
run = '''{% raw %}go list -m -f "{{ .Version }}" sigs.k8s.io/controller-runtime | awk -F'[v.]' '{printf "release-%d.%d", $2, $3}'{% endraw %} | cut -d. -f-2'''

[tasks."k8s:version"]
run = '''{% raw %}go list -m -f "{{ .Version }}" k8s.io/api | awk -F'[v.]' '{printf "1.%d", $3}'{% endraw %}'''

[tasks."envtest:setup"]
quiet = true
run = [
    'echo "Setting up envtest binaries for Kubernetes version {{vars.envtest_version}}"',
    'setup-envtest use {{vars.k8s_version}} --bin-dir bin -p path',
]

[tasks."kind:create"]
run = "kind --config=kind.yaml create cluster"
depends_post = ["install", "minio:deploy"]

[tasks."kind:delete"]
run = "kind delete cluster"

[tasks."kind:load"]
run = 'kind load docker-image {{arg(name="img",default=vars.image)}}'

[tasks."docker:build"]
run = '{{vars.container_tool}} build -t {{arg(name="img",default=vars.image)}} .'

[tasks."docker:push"]
run = '{{vars.container_tool}} push {{arg(name="img",default=vars.image)}}'

[tasks."minio:deploy"]
run = [
  "kustomize build --enable-helm deploy/minio/ | kubectl apply -f-",
  "kustomize build --enable-helm deploy/minio-controller/ | kubectl apply -f-"
]

[tasks."minio:teardown"]
run = [
  "kustomize build --enable-helm deploy/minio/ | kubectl delete -f-",
  "kustomize build --enable-helm deploy/minio-controller/ | kubectl delete -f-"
]
